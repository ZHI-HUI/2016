mean_revenue5 <- (-120000*0.05+180000*0.0450*0.95)*1000
sd_revenue5 <- (120000+180000*0.0450)*sqrt(0.05*0.95)*sqrt(1000)
pnorm(0,mean = mean_revenue5, sd=sd_revenue5)
mean_oppo<- ((-120000*0.05)+180000*0.04478*0.95)
sd_oppo <- ((120000)+(0.04478)*180000)*sqrt((0.05)*(0.95)/1000)
z = (0-mean_oppo)/sd_oppo
mean_oppo
sd_oppo
pnorm(z)
interest<- 0.04478
revenue <- function(N) {
def <- rep(c("default","no_Default"), c(5,95))
revenue_list <- sample( ifelse( def=="default", -120000, 180000*interest),  N, replace = TRUE)
revenue = sum(revenue_list)
return(revenue)
}
monte_revenue <- function(B,n){
revenue1 <- replicate( B, revenue(n))
par(mfrow=c(1,2))
hist(revenue1)
qqnorm(revenue1);qqline(revenue1)
mean_revenue1 <- mean(revenue1)
sd_revenue1 <-sd(revenue1)
print(mean_revenue1)
print(sd_revenue1)
}
proportion_prof_neg <- function(B, N){
earn <- replicate( B, revenue(N))
neg <- earn <0
neg <- as.numeric(neg)
proportion <- sum(neg)/B
return(proportion)
}
proportion_prof_neg(100000,1000)
mean_revenue5 <- (-120000*0.05+180000*0.0450*0.95)*1000
sd_revenue5 <- (120000+180000*0.0450)*sqrt(0.05*0.95)*sqrt(1000)
pnorm(0,mean = mean_revenue5, sd=sd_revenue5)
revenue3 <- function(N){return(sum(sample(c(-120000,180000*0.0450),N,replace=TRUE,prob=c(0.05,0.95))))}
revenue5 <- function(N){return(sum(sample(c(-120000,180000*0.0450),N,replace=TRUE,prob=c(0.05,0.95))))}
hist(revenue.mc5(1000))
revenue5 <- function(N){return(sum(sample(c(-120000,180000*0.0450),N,replace=TRUE,prob=c(0.05,0.95))))}
revenue.mc5 <- function(N){replicate(B,revenue5(N))}
hist(revenue.mc5(1000))
revenue.mc5 <- function(N){replicate(B,revenue5(N))}
hist(revenue.mc5(1000))
get_outcome <- function(N){return(sum(sample(c(-1,1), N, replace=TRUE, prob=c(10/19, 9/19))))}
N1 <- c(10, 25, 100, 1000)
B <-10000
set.seed(101)
totalearnings<-data.frame(replicate(B, get_outcome(10)), replicate(B, get_outcome(25)), replicate(B, get_outcome(100)), replicate(B, get_outcome(1000)))
colnames(totalearnings)<-c("N10", "N25", "N100", "N1000")
hist(totalearnings$N10)
hist(totalearnings$N25)
hist(totalearnings$N100)
hist(totalearnings$N1000)
expect<-apply(totalearnings, 2, mean)
standerr<-(apply(totalearnings, 2, sd))
expect
standerr
avgearnings<-data.frame(replicate(B, get_outcome(10)/10), replicate(B, get_outcome(25)/25), replicate(B, get_outcome(100)/100), replicate(B, get_outcome(1000)/1000))
colnames(avgearnings)<-c("N10", "N25", "N100", "N1000")
hist(avgearnings$N10)
hist(avgearnings$N25)
hist(avgearnings$N100)
hist(avgearnings$N1000)
expect.avg<-apply(avgearnings, 2, mean)
standerr.avg<-(apply(avgearnings, 2, sd))/sqrt(N1)
expect.avg
standerr.avg
1-pnorm(0, mean = -1/19*25, sd = 2*sqrt(25*9/19*10/19))
set.seed(102)
MC.est<-sum(replicate(B, get_outcome(25))>0)/B
MC.est
prob_casinolose <- function(N){sum(replicate(B, get_outcome(N))>0)/B}
N2 <- c(25, 50, 100, 200, 400, 600, 800, 1000)
prob <- c(prob_casinolose(25),prob_casinolose(50),prob_casinolose(100),prob_casinolose(200),prob_casinolose(400),prob_casinolose(600),prob_casinolose(800),prob_casinolose(1000))
plot(N2, prob)
set.seed(103)
loss <- function(N){sum(sample(c(-120000,0), N, replace=TRUE, prob=c(0.02,0.98)))}
loss(1000)
set.seed(104)
moneyloss <- function(N){return(replicate(B,loss(N)))}
hist(moneyloss(1000))
qqnorm(moneyloss(1000));qqline(moneyloss(1000))
mean_loss <- mean(moneyloss(1000))
mean_loss
sd_loss <- sd(moneyloss(1000))
sd_loss
interest.rate <- (100+120000*0.02)/(180000*0.98)
interest.rate
set.seed(106)
revenue <- function(N){return(sum(sample(c(-120000,180000*interest.rate),N,replace=TRUE,prob=c(0.02,0.98))))}
revenue.mc <- function(N){replicate(B,revenue(N))}
hist(revenue.mc(1000))
qqnorm(revenue.mc(1000));qqline(revenue.mc(1000))
mean_revenue <- mean(revenue.mc(1000))
mean_revenue
sd_revenue <- sd(revenue.mc(1000))
sd_revenue
prob_moneyloss <- sum(revenue.mc(1000)<0)/B
prob_moneyloss
qnorm(0.001)
expected.profit <- 1000*(-120000*0.02+180000*0.0232*0.98)
expected.profit
revenue2 <- function(N){return(sum(sample(c(-120000,180000*0.0232),N,replace=TRUE,prob=c(0.02,0.98))))}
revenue.mc2 <- function(N){replicate(B,revenue2(N))}
hist(revenue.mc2(1000))
qqnorm(revenue.mc2(1000));qqline(revenue.mc2(1000))
mean_revenue2 <- mean(revenue.mc2(1000))
mean_revenue2
sd_revenue2 <- sd(revenue.mc2(1000))
sd_revenue2
prob_moneyloss2 <- sum(revenue.mc2(1000)<0)/B
prob_moneyloss2
expected.profit2 <- 1000*(-120000*0.03+180000*0.0326*0.97)
expected.profit2
revenue3 <- function(N){return(sum(sample(c(-120000,180000*0.0326),N,replace=TRUE,prob=c(0.03,0.97))))}
revenue.mc3 <- function(N){replicate(B,revenue3(N))}
hist(revenue.mc3(1000))
qqnorm(revenue.mc3(1000));qqline(revenue.mc3(1000))
mean_revenue3 <- mean(revenue.mc3(1000))
mean_revenue3
sd_revenue3 <- sd(revenue.mc3(1000))
sd_revenue3
prob_moneyloss3 <- sum(revenue.mc3(1000)<0)/B
prob_moneyloss3
qnorm(0.01)
expected.profit3 <- 1000*(-120000*0.02+180000*0.0208*0.98)
expected.profit3
expected.profit
prob_moneyloss2
set.seed(110)
revenue2 <- function(N){return(sum(sample(c(-120000,180000*0.0232),N,replace=TRUE,prob=c(0.02,0.98))))}
revenue.mc2 <- function(N){replicate(B,revenue2(N))}
hist(revenue.mc2(1000))
qqnorm(revenue.mc2(1000));qqline(revenue.mc2(1000))
mean_revenue2 <- mean(revenue.mc2(1000))
mean_revenue2
sd_revenue2 <- sd(revenue.mc2(1000))
sd_revenue2
prob_moneyloss2 <- sum(revenue.mc2(1000)<0)/B
prob_moneyloss2
prob_moneyloss2 <- sum(revenue.mc2(1000)<0)/B
prob_moneyloss2
revenue2 <- function(N){return(sum(sample(c(-120000,180000*0.0232),N,replace=TRUE,prob=c(0.02,0.98))))}
set.seed(110)
revenue.mc2 <- function(N){replicate(B,revenue2(N))}
hist(revenue.mc2(1000))
qqnorm(revenue.mc2(1000));qqline(revenue.mc2(1000))
mean_revenue2 <- mean(revenue.mc2(1000))
mean_revenue2
sd_revenue2 <- sd(revenue.mc2(1000))
sd_revenue2
prob_moneyloss2 <- sum(revenue.mc2(1000)<0)/B
prob_moneyloss2
set.seed(110)
prob_moneyloss2 <- sum(revenue.mc2(1000)<0)/B
prob_moneyloss2
expected.profit2 <- 1000*(-120000*0.03+180000*0.0326*0.97)
expected.profit2
revenue3 <- function(N){return(sum(sample(c(-120000,180000*0.0326),N,replace=TRUE,prob=c(0.03,0.97))))}
revenue.mc3 <- function(N){replicate(B,revenue3(N))}
hist(revenue.mc3(1000))
qqnorm(revenue.mc3(1000));qqline(revenue.mc3(1000))
mean_revenue3 <- mean(revenue.mc3(1000))
mean_revenue3
sd_revenue3 <- sd(revenue.mc3(1000))
sd_revenue3
prob_moneyloss3 <- sum(revenue.mc3(1000)<0)/B
prob_moneyloss3
qnorm(0.01)
#Solve for (-120000*0.02+180000*I*0.98)  = 2.326*|-120000-180000*I|*sqrt(0.02*0.98/1000)
#We get I = 0.0208
expected.profit3 <- 1000*(-120000*0.02+180000*0.0208*0.98)
expected.profit3
revenue4 <- function(N){return(sum(sample(c(-120000,180000*0.0208),N,replace=TRUE,prob=c(0.02,0.98))))}
revenue.mc4 <- function(N){replicate(B,revenue4(N))}
hist(revenue.mc4(1000))
qqnorm(revenue.mc4(1000));qqline(revenue.mc4(1000))
mean_revenue4 <- mean(revenue.mc4(1000))
mean_revenue4
sd_revenue4 <- sd(revenue.mc4(1000))
sd_revenue4
prob_moneyloss4 <- sum(revenue.mc4(1000)<0)/B
prob_moneyloss4
mean_revenue5 <- (-120000*0.05+180000*0.0450*0.95)*1000
sd_revenue5 <- (120000+180000*0.0450)*sqrt(0.05*0.95)*sqrt(1000)
pnorm(0,mean = mean_revenue5, sd=sd_revenue5)
revenue.mc5 <- function(N){replicate(B,revenue5(N))}
hist(revenue.mc5(1000))
revenue5 <- function(N){return(sum(sample(c(-120000,180000*0.0450),N,replace=TRUE,prob=c(0.05,0.95))))}
revenue.mc5 <- function(N){replicate(B,revenue5(N))}
hist(revenue.mc5(1000))
qqnorm(revenue.mc5(1000));qqline(revenue.mc5(1000))
mean_revenue5 <- mean(revenue.mc5(1000))
mean_revenue5
sd_revenue5 <- sd(revenue.mc5(1000))
sd_revenue5
prob_moneyloss5 <- sum(revenue.mc5(1000)<0)/B
prob_moneyloss5
pnorm(0,mean = mean_revenue5, sd=sd_revenue5)
mean_revenue5 <- (-120000*0.05+180000*0.0450*0.95)*1000
sd_revenue5 <- (120000+180000*0.0450)*sqrt(0.05*0.95)*sqrt(1000)
pnorm(0,mean = mean_revenue5, sd=sd_revenue5)
mean_revenue5 <- (-120000*0.05+180000*0.0450*0.95)*1000
sd_revenue5 <- (120000+180000*0.0450)*sqrt(0.05*0.95)*sqrt(1000)
pnorm(0,mean = mean_revenue5, sd=sd_revenue5)
mean_revenue6 <- mean(revenue.mc5(1000))
mean_revenue6
sd_revenue6 <- sd(revenue.mc5(1000))
sd_revenue6
prob_moneyloss5 <- sum(revenue.mc5(1000)<0)/B
prob_moneyloss5
pnorm(0.001)
qnorm(0.001)
(-120000*0.05+180000*0.0450*0.95)/|180000*0.0450+120000|*sqrt(0.05*0.95/N) = 3.09
(-120000*0.05+180000*0.0450*0.95)/(180000*0.0450+120000)*sqrt(0.05*0.95/N) = 3.09
-120000*0.05+180000*0.0450*0.95
180000*0.0450+120000
sqrt(0.05*0.95)
(128100*sqrt(0.05*0.95)*qnorm(0.001)/1695)^2
hist(revenue.mc5(2591))
qqnorm(revenue.mc5(2591));qqline(revenue.mc5(2591))
mean_revenue6 <- mean(revenue.mc5(2591))
mean_revenue6
sd_revenue7 <- sd(revenue.mc5(2591))
sd_revenue7
prob_moneyloss7 <- sum(revenue.mc5(2591)<0)/B
prob_moneyloss7
loan <- 180000
loss_per_foreclosure <- 120000
p2 <- 0.05
interest_rate2 <- 0.05
B <- 10^5
outcomes1 <- replicate(B,{
sample( c(-loss_per_foreclosure, interest_rate2*loan ), 2, replace=TRUE, prob=c(p2, 1-p2))
})
outcomes1
sum( outcomes1[1,] < 0 & outcomes1[2,]<0)/sum(outcomes1[1,]<0)
B <- 10^5
outcomes2 <- replicate(B,{
add <- sample( c(-0.04,0.04), 1)
sample( c(-loss_per_foreclosure, interest_rate2*loan ), 2, replace=TRUE, prob=c(p2+add, 1-(p2+add)))
})
sum( outcomes2[1,] < 0 & outcomes2[2,]<0)/sum(outcomes2[1,]<0)
loan <- 180000
loss_per_foreclosure <- 120000
p2 <- 0.05
interest_rate <- 0.04478
B <- 10^5
revenue <- replicate(B,{
add <- sample( c(-0.04,0.04), 1)
sample_results <- sample( c(-loss_per_foreclosure, interest_rate*loan ), 1000, replace=TRUE, prob=c(p2+add, 1-(p2+add)))
per_1000 = sum(sample_results)
})
Expected_earning <- mean(revenue)
Expected_earning
mean(outcomes2)
sum( outcomes1[1,] < 0 & outcomes1[2,]<0)/sum(outcomes1[1,]<0)
sum( outcomes2[1,] < 0 & outcomes2[2,]<0)/sum(outcomes2[1,]<0)
loan <- 180000
loss_per_foreclosure <- 120000
p2 <- 0.05
interest_rate2 <- 0.0450
B <- 10^5
revenue6 <- replicate(B,{
sample( c(-loss_per_foreclosure, interest_rate2*loan ), 1000, replace=TRUE, prob=c(p2, 1-p2))
})
revenue6
revenue <- replicate(B,{
sample_results <- sample( c(-loss_per_foreclosure, interest_rate*loan ), 1000, replace=TRUE, prob=c(p2, 1-p2))
per_1000 = sum(sample_results)
})
revenue
revenue
mean(revenue6)
Expected_earning <- mean(revenue)
Expected_earning
sum(revenue6)
Expected_earning <-mean(revenue6)*1000
revenue6 <- replicate(B,{
sample( c(-loss_per_foreclosure, interest_rate2*loan ), 1000, replace=TRUE, prob=c(p2, 1-p2))
})
Expected_earning <-mean(revenue6)*1000
Expected_earning <-mean(revenue6)*1000
Expected_earning
Expected_earning <- mean(revenue)
Expected_earning
Expected_earnings <-mean(revenue6)*1000
prob_moneyloss8 <- prob(sum(revenue6<(-1000000))/B)
prob_moneyloss8
prob_moneyloss8 <- (sum(revenue6<(-1000000))/B)
prob_moneyloss8
neg <- revenue6 <(-1000000)
neg <- as.numeric(neg)
proportion <- sum(neg)/B
proportion
Expected_earnings <-mean(revenue6)*1000
neg <- revenue <(-1000000)
neg <- as.numeric(neg)
proportion <- sum(neg)/B
proportion
revenue6
revenue6 <- replicate(B,{
sample( c(-loss_per_foreclosure, interest_rate2*loan ), 1000, replace=TRUE, prob=c(p2, 1-p2))
})
Expected_earnings <-mean(revenue6)*1000
neg <- revenue <(-10000000)
neg <- as.numeric(neg)
proportion <- sum(neg)/B
proportion
neg <- revenue <(-10000000)
neg <- as.numeric(neg)
proportion <- sum(neg)/B
proportion
neg <- revenue <(-1000000)
neg <- as.numeric(neg)
proportion <- sum(neg)/B
proportion
neg <- revenue6 <(-1000000)
neg <- as.numeric(neg)
proportion <- sum(neg)/B
proportion
neg <- revenue6 <(-10000000)
neg <- as.numeric(neg)
proportion <- sum(neg)/B
proportion
B <- 10^5
revenue7 <- replicate(B,{
add <- sample( c(-0.04,0.04), 1)
sample( c(-loss_per_foreclosure, interest_rate2*loan ), 2, replace=TRUE, prob=c(p2+add, 1-(p2+add)))
})
Expected_earnings2 <-mean(revenue7)*1000
Expected_earnings2 <-mean(revenue7)*1000
#Prob of losing 1 million
neg <- revenue7 <(-1000000)
neg <- as.numeric(neg)
proportion <- sum(neg)/B
proportion
#Prob of losing 10 million
neg <- revenue7 <(-10000000)
neg <- as.numeric(neg)
proportion <- sum(neg)/B
proportion
revenue6 <- replicate(B,{
sample( c(-loss_per_foreclosure, interest_rate2*loan ), 1000, replace=TRUE, prob=c(p2, 1-p2))
})
mean_revenue6 <- mean(revenue.mc5(1000))
mean_revenue6
loan <- 180000
loss_per_foreclosure <- 120000
p2 <- 0.05
interest_rate <- 0.04478
B <- 10^5
revenue <- replicate(B,{
sample_results <- sample( c(-loss_per_foreclosure, interest_rate*loan ), 1000, replace=TRUE, prob=c(p2, 1-p2))
per_1000 = sum(sample_results)
})
revenue6 <- replicate(B,{
samples <- sample( c(-loss_per_foreclosure, interest_rate2*loan ), 1000, replace=TRUE, prob=c(p2, 1-p2))
return(sum(samples))
})
Expected_earnings <-mean(revenue6)
Expected_earnings
revenue6
prob_moneyloss8 <-sum(revenue6 < -1000000)/B
prob_moneyloss8
neg <- revenue <(-1000000)
neg <- as.numeric(neg)
proportion <- sum(neg)/B
proportion
prob_moneyloss9 <-sum(revenue6 < -10000000)/B
prob_moneyloss9
revenue7 <- replicate(B,{
add <- sample( c(-0.04,0.04), 1)
samples2 <- sample( c(-loss_per_foreclosure, interest_rate2*loan ), 2, replace=TRUE, prob=c(p2+add, 1-(p2+add)))
return(sum(samples2))
})
Expected_earnings2 <-mean(revenue7)
Expected_earnings2
Expected_earnings <-mean(revenue6)
Expected_earnings
loan <- 180000
loss_per_foreclosure <- 120000
p2 <- 0.05
interest_rate <- 0.04478
B <- 10^5
revenue <- replicate(B,{
add <- sample( c(-0.04,0.04), 1)
sample_results <- sample( c(-loss_per_foreclosure, interest_rate*loan ), 1000, replace=TRUE, prob=c(p2+add, 1-(p2+add)))
per_1000 = sum(sample_results)
})
Expected_earning <- mean(revenue)
Expected_earning
revenue7 <- replicate(B,{
add <- sample( c(-0.04,0.04), 1)
samples2 <- sample( c(-loss_per_foreclosure, interest_rate2*loan ), 1000, replace=TRUE, prob=c(p2+add, 1-(p2+add)))
return(sum(samples2))
})
Expected_earnings2 <-mean(revenue7)
Expected_earnings2
prob_moneyloss10 <-sum(revenue7 < -1000000)/B
prob_moneyloss10
prob_moneyloss11 <-sum(revenue7 < -10000000)/B
prob_moneyloss11
Expected_earnings
Expected_earnings2
prob_moneyloss8
prob_moneyloss11
prob_moneyloss9
set.seed(110)
revenue6 <- replicate(B,{
samples <- sample( c(-loss_per_foreclosure, interest_rate2*loan ), 1000, replace=TRUE, prob=c(p2, 1-p2))
return(sum(samples))
})
Expected_earnings <-mean(revenue6)
Expected_earnings
prob_moneyloss8 <-sum(revenue6 < -1000000)/B
prob_moneyloss8
prob_moneyloss9 <-sum(revenue6 < -10000000)/B
prob_moneyloss9
set.seed(111)
revenue7 <- replicate(B,{
add <- sample( c(-0.04,0.04), 1)
samples2 <- sample( c(-loss_per_foreclosure, interest_rate2*loan ), 1000, replace=TRUE, prob=c(p2+add, 1-(p2+add)))
return(sum(samples2))
})
Expected_earnings2 <-mean(revenue7)
Expected_earnings2
prob_moneyloss10 <-sum(revenue7 < -1000000)/B
prob_moneyloss10
prob_moneyloss11 <-sum(revenue7 < -10000000)/B
prob_moneyloss11
set.seed(108)
prob_moneyloss <- sum(revenue.mc(1000)<0)/B
prob_moneyloss
set.seed(106)
revenue <- function(N){return(sum(sample(c(-120000,180000*interest.rate),N,replace=TRUE,prob=c(0.02,0.98))))}
revenue.mc <- function(N){replicate(B,revenue(N))}
hist(revenue.mc(1000))
qqnorm(revenue.mc(1000));qqline(revenue.mc(1000))
mean_revenue <- mean(revenue.mc(1000))
mean_revenue
sd_revenue <- sd(revenue.mc(1000))
sd_revenue
prob_moneyloss <- sum(revenue.mc(1000)<0)/B
prob_moneyloss
set.seed(108)
prob_moneyloss <- sum(revenue.mc(1000)<0)/B
prob_moneyloss
prob_moneyloss <- sum(revenue.mc(1000)<0)/B
prob_moneyloss
set.seed(106)
revenue <- function(N){return(sum(sample(c(-120000,180000*interest.rate),N,replace=TRUE,prob=c(0.02,0.98))))}
set.seed(108)
revenue.mc <- function(N){replicate(B,revenue(N))}
hist(revenue.mc(1000))
mean_revenue <- mean(revenue.mc(1000))
mean_revenue
sd_revenue <- sd(revenue.mc(1000))
sd_revenue
prob_moneyloss <- sum(revenue.mc(1000)<0)/B
prob_moneyloss
revenue.mc <- function(N){replicate(B,revenue(N))}
mean_revenue <- mean(revenue.mc(1000))
mean_revenue
sd_revenue <- sd(revenue.mc(1000))
sd_revenue
